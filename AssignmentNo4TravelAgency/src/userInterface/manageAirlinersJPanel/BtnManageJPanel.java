/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.manageAirlinersJPanel;

import Business.Airliners;
import Business.AirlinersDirectory;
import Business.Airplane;
import Business.FlightScheDirectory;
import Business.AirplaneDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rohan
 */
public class BtnManageJPanel extends javax.swing.JPanel {
private JPanel rightJPanel;
    private AirlinersDirectory airlinersDirectory;
    private FlightScheDirectory flightScheDirectory;
    private Airliners airliners;
    private AirplaneDirectory airplaneDirectory;
    
    /**
     * Creates new form BtnManageJPanel
     */
   

    BtnManageJPanel(JPanel rightJPanel, FlightScheDirectory flightScheDirectory, AirlinersDirectory airlinersDirectory, AirplaneDirectory airplaneDirectory) {
       initComponents();
           
         airliners = new Airliners();
         this.airlinersDirectory = airlinersDirectory;
         this.rightJPanel = rightJPanel;
         this.flightScheDirectory = flightScheDirectory;
         this.airplaneDirectory = airplaneDirectory;
         populateTable(airlinersDirectory, "all");
         populateTable1(airplaneDirectory, "al");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAirliners = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        planeTable = new javax.swing.JTable();
        airplaneBtbn = new javax.swing.JButton();
        addFlightBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblAirliners.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliners Name :"
            }
        ));
        jScrollPane1.setViewportView(tblAirliners);

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        planeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane name :"
            }
        ));
        jScrollPane2.setViewportView(planeTable);

        airplaneBtbn.setText("Add airplane");
        airplaneBtbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airplaneBtbnActionPerformed(evt);
            }
        });

        addFlightBtn.setText("Add Flight");
        addFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightBtnActionPerformed(evt);
            }
        });

        viewBtn.setText("View & Update");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(airplaneBtbn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(422, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124)
                .addComponent(viewBtn)
                .addGap(18, 18, 18)
                .addComponent(airplaneBtbn)
                .addGap(18, 18, 18)
                .addComponent(addFlightBtn)
                .addContainerGap(201, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        /* int selectedRow = tblAirliners.getSelectedRow();
        if (selectedRow < 0 )
        JOptionPane.showMessageDialog(null, "Please select a row from Airliner Table");
        else
        {
            Airliners airliners = (Airliners) planeTable.getValueAt(selectedRow, 0);
            AirplaneDirectory  airplaneDirectory = airliners.getAirplaneDirectory();
            DefaultTableModel dtm = (DefaultTableModel) planeTable.getModel();
            dtm.setRowCount(0);
            for (Airplane airplane: airplaneDirectory.getAirplaneData())
            {
                Object row[] = new Object[1];
                row[0] = airplane;
                // row[1] = airplane.getModelNumber();
                // row[2]=  airplane.getManufacturingCompany();
                // row[3]=  airplane.getManufacturingYear();
                // row[4]=airplane.getTotalSeats();
                dtm.addRow(row);
            }
            //airlinersTable1.setEnabled(false);
        }*/
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void airplaneBtbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airplaneBtbnActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblAirliners.getSelectedRow();
        if (selectedrow >= 0)
        {
            Airliners airliner = (Airliners)tblAirliners.getValueAt(selectedrow,0);
            addPlaneJPanel panel = new addPlaneJPanel(rightJPanel, flightScheDirectory, airliner , airplaneDirectory);
            rightJPanel.add("addPlaneJPanel", panel);
            CardLayout layout = (CardLayout)rightJPanel.getLayout();
            layout.next(rightJPanel);
        }

    }//GEN-LAST:event_airplaneBtbnActionPerformed

    private void addFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightBtnActionPerformed
        // TODO add your handling code here:
        /* int selectedRow = planeTable.getSelectedRow();
        if (selectedRow < 0 )
        {
            JOptionPane.showMessageDialog(null, "Please select a row from Airliner Table");
        }*/
        int selectedrow = tblAirliners.getSelectedRow();
        int selectedrow1 = planeTable.getSelectedRow();
        if (selectedrow != selectedrow1)
        {
           JOptionPane.showMessageDialog(null, "Please select a airplane from correct Airliner");
        }
           else{
        if (selectedrow >= 0 && selectedrow1>= 0)
        {
            Airliners airliner = (Airliners)tblAirliners.getValueAt(selectedrow,0);
            Airplane airplane1 = (Airplane)planeTable.getValueAt(selectedrow1, 0);
            addFlightJPanel panel = new addFlightJPanel(rightJPanel, flightScheDirectory, airliner, airplane1);
            rightJPanel.add("addFlightJPanel", panel);
            CardLayout layout = (CardLayout)rightJPanel.getLayout();
            layout.next(rightJPanel);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row from Both tables");
        }
                   }
    }//GEN-LAST:event_addFlightBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        //  DefaultTableModel dtm = (DefaultTableModel)tblAirliners.getModel();
        int selectedrow = tblAirliners.getSelectedRow();
        if (selectedrow >= 0)
        {
            Airliners airliner = (Airliners)tblAirliners.getValueAt(selectedrow,0);
            viewAirlinersJPanel panel = new viewAirlinersJPanel(rightJPanel, airliner, flightScheDirectory );
            rightJPanel.add("viewAirlinersJPanel", panel);
            CardLayout layout = (CardLayout)rightJPanel.getLayout();
            layout.next(rightJPanel);

        }
        /*  int selectedRow = tblDetails.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from Table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Uber uber = (Uber) tblDetails.getValueAt((selectedRow), 0);
            ViewJPanel amPanel = new ViewJPanel (rightJPanel, uber);
            rightJPanel.add("ViewJPanel",amPanel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next(rightJPanel);
        }*/

    }//GEN-LAST:event_viewBtnActionPerformed
void populateTable(AirlinersDirectory airlinersDirectory, String all) {
         DefaultTableModel dtm = (DefaultTableModel)tblAirliners.getModel();
        dtm.setRowCount(0);
        for ( Airliners air : airlinersDirectory.getAirlinersData())
        {
            Object row[]= new Object [1];
            row[0] = air;
           // row[1] = air.getStrengthofFlights();
           // row[2] = air.getFreqOfFlights();
            //row[3] = air.getHeadOffice();
            //row[4] = air.getRegionOfOperations();
            dtm.addRow(row);
            
            
        }
    }
void populateTable1(AirplaneDirectory airplaneDirectory, String al) {
         //To change body of generated methods, choose Tools | Templates.
          DefaultTableModel dtmm = (DefaultTableModel) planeTable.getModel();
        dtmm.setRowCount(0);
        for ( Airplane airp : airplaneDirectory.getAirplaneData())
        {
            Object row[]= new Object [1];
            row[0] = airp;
           // row[1] = air.getStrengthofFlights();
           // row[2] = air.getFreqOfFlights();
            //row[3] = air.getHeadOffice();
            //row[4] = air.getRegionOfOperations();
            dtmm.addRow(row);
            
            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFlightBtn;
    private javax.swing.JButton airplaneBtbn;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable planeTable;
    private javax.swing.JTable tblAirliners;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}

