/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.manageAirlinersJPanel;

import Business.Airliners;
import Business.AirlinersDirectory;
import Business.FlightScheDirectory;
import Business.Flights;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class viewAirlinersJPanel extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private Airliners airliners;
    private FlightScheDirectory flightScheDirectory;
    private ArrayList<Flights> flightList;
    private AirlinersDirectory airlinersDirectory;
    private Flights flights;
    //private AirlinersDirectory airlinersDirectory;
    /**
     * Creates new form viewAirlinersJPanel
     */
  

   

    viewAirlinersJPanel(JPanel rightJPanel, Airliners airliners, FlightScheDirectory flightScheDirectory) {
         initComponents();
         
         this.airlinersDirectory = airlinersDirectory;
         this.rightJPanel = rightJPanel;
         this.airliners = airliners;
         this.flightScheDirectory = flightScheDirectory;
         populateViewAirlinersDetails();
         populateViewFlights();
         //populateTable( flightScheDirectory, "all");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFieldStrengthOfFlights = new javax.swing.JTextField();
        txtFieldHeadOfficeLocation = new javax.swing.JTextField();
        txtFieldAirlinersName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchTable1 = new javax.swing.JTable();
        saveAirlinerBtn = new javax.swing.JButton();
        flightUpdateBtn = new javax.swing.JButton();
        lowFreqBtn = new javax.swing.JRadioButton();
        moderateFreqBtn = new javax.swing.JRadioButton();
        highFreqBtn = new javax.swing.JRadioButton();
        regionJComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Head Office Location :");

        jLabel6.setText("Region of Operations :");

        txtFieldStrengthOfFlights.setEnabled(false);

        txtFieldHeadOfficeLocation.setEnabled(false);

        txtFieldAirlinersName.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("View");

        jLabel2.setText("Airliners Name :");

        jLabel3.setText("Strength of Flights :");

        jLabel4.setText("Frequency of Flights :");

        updateBtn.setText("Update Airliner");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        searchTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner Name :", "Airplane Name :", "Flight Name :", "Departure Time :", "Departure Date :", "FROM :", "TO :", "Price", "Status"
            }
        ));
        jScrollPane2.setViewportView(searchTable1);

        saveAirlinerBtn.setText("Save");
        saveAirlinerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAirlinerBtnActionPerformed(evt);
            }
        });

        flightUpdateBtn.setText("Update Flight");
        flightUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightUpdateBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(lowFreqBtn);
        lowFreqBtn.setText("Low");
        lowFreqBtn.setEnabled(false);

        buttonGroup1.add(moderateFreqBtn);
        moderateFreqBtn.setText("Moderate");
        moderateFreqBtn.setEnabled(false);

        buttonGroup1.add(highFreqBtn);
        highFreqBtn.setText("High");
        highFreqBtn.setEnabled(false);

        regionJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select the Region", "Asia", "North America", "South America", "Europe", "Africa", "Australia", "All regions" }));
        regionJComboBox.setEnabled(false);

        jLabel7.setText("Flight Details");

        jButton1.setText("Cancel Flight");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldAirlinersName)
                            .addComponent(txtFieldStrengthOfFlights)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(regionJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lowFreqBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(moderateFreqBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(highFreqBtn))
                                    .addComponent(txtFieldHeadOfficeLocation, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 10, Short.MAX_VALUE)))
                        .addGap(156, 156, 156))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(updateBtn)
                        .addGap(18, 18, 18)
                        .addComponent(saveAirlinerBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(flightUpdateBtn)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(261, 261, 261))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel2)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1)
                        .addGap(59, 59, 59)
                        .addComponent(txtFieldAirlinersName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldStrengthOfFlights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lowFreqBtn)
                            .addComponent(moderateFreqBtn)
                            .addComponent(highFreqBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldHeadOfficeLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regionJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(saveAirlinerBtn))
                .addGap(33, 33, 33)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flightUpdateBtn)
                    .addComponent(jButton1))
                .addContainerGap(162, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void populateViewFlights() {  
    DefaultTableModel dtm = (DefaultTableModel) searchTable1.getModel();
        dtm.setRowCount(0);
        flightList = flightScheDirectory.showFlights(txtFieldAirlinersName.getText());
        for(Flights flight: flightList)
                {
            Object[] row = new Object[8];
            row[0] = flight;
            row[1] = flight.getAirplaneName();
            
            row[2] = flight.getFlightName();
            row[3] = flight.getDepTime();
            row[4] = flight.getDepDate();
            row[5] = flight.getDeparture();
            row[6] = flight.getArrive();
            row[7] = flight.getPrice();
            //row[8] = flight.getStatus();
            
            dtm.addRow(row);
                }
    }
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        txtFieldStrengthOfFlights.setEditable(true);
        
       // txtFieldFreqOfFlights.setEditable(true);
        txtFieldHeadOfficeLocation.setEditable(true);
       // txtFieldRegionOfOperations.setEditable(true);
        txtFieldStrengthOfFlights.setEnabled(true);
        //txtFieldFreqOfFlights.setEnabled(true);
        highFreqBtn.setEnabled(true);
        lowFreqBtn.setEnabled(true);
        moderateFreqBtn.setEnabled(true);
        txtFieldHeadOfficeLocation.setEnabled(true);
       // txtFieldRegionOfOperations.setEnabled(true);
        regionJComboBox.setEnabled(true);
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void saveAirlinerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAirlinerBtnActionPerformed
        // TODO add your handling code here:
        /*
        String airlinersName = txtFieldAirlinersName.getText();
        int strength = Integer.parseInt(txtFieldStrengthOfFlights.getText());
        String freq = txtFieldFreqOfFlights.getText();
        String headOffice = txtFieldHeadOfficeLocation.getText();
        String region = txtFieldRegionOfOperations.getText();
        */
        
        String airlinersName = txtFieldAirlinersName.getText();  
        if(airlinersName == null || airlinersName.equals("")){
        JOptionPane.showMessageDialog(null, "Airliner Name can't be empty");
        return;
        }
        
        String s = txtFieldStrengthOfFlights.getText();
        if(s == null || s.equals("") ){
        JOptionPane.showMessageDialog(null, "Strength can't be empty");
        return;
        }
        
        try{
               Integer.parseInt(txtFieldStrengthOfFlights.getText());
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null,"Enter number for Strenght");
                return;
            }
        /*
        String freq = txtFieldFreqOfFlights.getText();
        if(freq == null || freq.equals("")){
        JOptionPane.showMessageDialog(null, "Frequency can't be empty");
        return;
        }*/
        
        
        
        String headOffice = txtFieldHeadOfficeLocation.getText();
        if(headOffice == null || headOffice.equals("")){
        JOptionPane.showMessageDialog(null, "Head Office can't be empty");
        return;
        }
        /*
        String region = txtFieldRegionOfOperations.getText();
        if(region == null || region.equals("")){
        JOptionPane.showMessageDialog(null, "Region can't be empty");
        return;
        }*/
        String x = String.valueOf(regionJComboBox.getSelectedItem());
        if(x.equalsIgnoreCase("Select the region"))
        {
            JOptionPane.showMessageDialog(null, "Please select the Region");
            return;
        }
        
        
        
        
        airliners.setAirlinersName(airlinersName);
        airliners.setStrengthofFlights(Integer.parseInt(txtFieldStrengthOfFlights.getText()));
       // airliners.setFreqOfFlights(freq);
       
        if(lowFreqBtn.isSelected())
        {
            airliners.setFreqOfFlights("LOW");
        }
        
        else if(moderateFreqBtn.isSelected())
        {
            airliners.setFreqOfFlights("MODERATE");
        }
        
        else if(highFreqBtn.isSelected())
        {
            airliners.setFreqOfFlights("HIGH");
        }
        airliners.setHeadOffice(headOffice);
       // airliners.setRegionOfOperations(region);
       
       airliners.setRegionOfOperations(x);
       
        
        JOptionPane.showMessageDialog(null,"Airline Information updated successfuly!");
        
        txtFieldStrengthOfFlights.setEditable(false);
        //txtFieldFreqOfFlights.setEditable(false);
        txtFieldHeadOfficeLocation.setEditable(false);
        //txtFieldRegionOfOperations.setEditable(false);
        txtFieldStrengthOfFlights.setEnabled(false);
        //txtFieldFreqOfFlights.setEnabled(false);
        highFreqBtn.setEnabled(false);
        lowFreqBtn.setEnabled(false);
        moderateFreqBtn.setEnabled(false);
        txtFieldHeadOfficeLocation.setEnabled(false);
       // txtFieldRegionOfOperations.setEnabled(false);
       regionJComboBox.setEnabled(false);
    }//GEN-LAST:event_saveAirlinerBtnActionPerformed

    private void flightUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightUpdateBtnActionPerformed
        // TODO add your handling code here:
        int selectedrow = searchTable1.getSelectedRow();
        if (selectedrow >= 0)
        {
            Flights flight = (Flights)searchTable1.getValueAt(selectedrow,0);
            updateFlightJPanel panel = new updateFlightJPanel(rightJPanel, flightScheDirectory , flight);
            rightJPanel.add("updateFlightJPanel", panel);
            CardLayout layout = (CardLayout)rightJPanel.getLayout();
            layout.next(rightJPanel);

        }
        
        else{
        JOptionPane.showMessageDialog(null, "Please select a row from Table", "Warning", JOptionPane.WARNING_MESSAGE);
        
        }
        
    }//GEN-LAST:event_flightUpdateBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = searchTable1.getSelectedRow();
        if(selectedRow >= 0){ 
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the Flight","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_NO_OPTION){
                Flights f1 = (Flights) searchTable1.getValueAt(selectedRow,0);
                flightScheDirectory.cancelFlight(f1);
                populateViewFlights();
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please select a row from Table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton flightUpdateBtn;
    private javax.swing.JRadioButton highFreqBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton lowFreqBtn;
    private javax.swing.JRadioButton moderateFreqBtn;
    private javax.swing.JComboBox<String> regionJComboBox;
    private javax.swing.JButton saveAirlinerBtn;
    private javax.swing.JTable searchTable1;
    private javax.swing.JTextField txtFieldAirlinersName;
    private javax.swing.JTextField txtFieldHeadOfficeLocation;
    private javax.swing.JTextField txtFieldStrengthOfFlights;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    private void populateViewAirlinersDetails() {
         txtFieldAirlinersName.setText(airliners.getAirlinersName());
         txtFieldStrengthOfFlights.setText(String.valueOf(airliners.getStrengthofFlights()));
        // txtFieldFreqOfFlights.setText(airliners.getFreqOfFlights());
        if(airliners.getFreqOfFlights().equalsIgnoreCase("HIGH"))
        {
            highFreqBtn.setSelected(true);
        }
        else if(airliners.getFreqOfFlights().equalsIgnoreCase("LOW"))
        {
            lowFreqBtn.setSelected(true);
            
        }
        
        else if(airliners.getFreqOfFlights().equalsIgnoreCase("MODERATE"))
        {
            moderateFreqBtn.setSelected(true);
            
        }
        
         txtFieldHeadOfficeLocation.setText(airliners.getHeadOffice());
       //  txtFieldRegionOfOperations.setText(airliners.getRegionOfOperations());
         if(airliners.getRegionOfOperations().equalsIgnoreCase("Asia")){
             regionJComboBox.setSelectedIndex(1);
         
         }
         
         if(airliners.getRegionOfOperations().equalsIgnoreCase("North America")){
             regionJComboBox.setSelectedIndex(2);
         
         }
         
         if(airliners.getRegionOfOperations().equalsIgnoreCase("South America")){
             regionJComboBox.setSelectedIndex(3);
         
         }
         
         if(airliners.getRegionOfOperations().equalsIgnoreCase("Europe")){
             regionJComboBox.setSelectedIndex(4);
         
         }
         
         
         if(airliners.getRegionOfOperations().equalsIgnoreCase("Africa")){
             regionJComboBox.setSelectedIndex(5);
         
         }
         
         if(airliners.getRegionOfOperations().equalsIgnoreCase("Australia")){
             regionJComboBox.setSelectedIndex(6);
         
         }
         
         if(airliners.getRegionOfOperations().equalsIgnoreCase("All regions")){
             regionJComboBox.setSelectedIndex(7);
         
         }
         
         
         
         
         
    }

    void populateTable(FlightScheDirectory flightScheDirectory, String all) {
         //To change body of generated methods, choose Tools | Templates.
         DefaultTableModel dtm = (DefaultTableModel) searchTable1.getModel();
        dtm.setRowCount(0);
        
        for(Flights flight : this.flightScheDirectory.getFlightData() ){
            
            if(flight.getAirlinerName().equals(txtFieldAirlinersName.getText()))
            {
            Object[] row = new Object[7];
            row[0] = flight;
            row[1] = flight.getFlightName();
            row[2] = flight.getDepTime();
            row[3] = flight.getDepDate();
            row[4] = flight.getDeparture();
            row[5] = flight.getArrive();
            row[6] = flight.getPrice();
            
            
            dtm.addRow(row);
        }

    }
        
    }
/*
    private void populateSeats() {
         
        DefaultTableModel dtm = (DefaultTableModel) searchTable1.getModel();
        dtm.setRowCount(0);
        for(Flights s : flightScheDirectory.getFlightData())
        {
            if(s.isCancelled())
            {
                
            }
            else
            {
             Object[] row = new Object[8];
            row[0] = s;
            row[1] = s.getFlightName();
            row[2] = s.getDepTime();
            row[3] = s.getDepDate();
            row[4] = s.getDeparture();
            row[5] = s.getArrive();
            row[6] = s.getPrice();
            row[7] = "Cancelled";
                //flights.getSeatList().remove(s);
            }
            
            
        } //To change body of generated methods, choose Tools | Templates.*/
    //To change body of generated methods, choose Tools | Templates.

}
